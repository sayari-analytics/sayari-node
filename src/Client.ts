/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Auth } from "./api/resources/auth/client/Client";
import { Attributes } from "./api/resources/attributes/client/Client";
import { Entity } from "./api/resources/entity/client/Client";
import { Info } from "./api/resources/info/client/Client";
import { Metadata } from "./api/resources/metadata/client/Client";
import { NegativeNews } from "./api/resources/negativeNews/client/Client";
import { Notifications } from "./api/resources/notifications/client/Client";
import { Project } from "./api/resources/project/client/Client";
import { Record_ } from "./api/resources/record/client/Client";
import { Resolution } from "./api/resources/resolution/client/Client";
import { Resource } from "./api/resources/resource/client/Client";
import { Search } from "./api/resources/search/client/Client";
import { Source } from "./api/resources/source/client/Client";
import { SupplyChain } from "./api/resources/supplyChain/client/Client";
import { Trade } from "./api/resources/trade/client/Client";
import { Traversal } from "./api/resources/traversal/client/Client";

export declare namespace SayariClient {
    export interface Options {
        environment?: core.Supplier<environments.SayariEnvironment | string>;
        clientId: core.Supplier<string>;
        clientSecret: core.Supplier<string>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class SayariClient {
    private readonly _oauthTokenProvider: core.OAuthTokenProvider;
    protected _attributes: Attributes | undefined;
    protected _auth: Auth | undefined;
    protected _entity: Entity | undefined;
    protected _info: Info | undefined;
    protected _metadata: Metadata | undefined;
    protected _negativeNews: NegativeNews | undefined;
    protected _notifications: Notifications | undefined;
    protected _project: Project | undefined;
    protected _record: Record_ | undefined;
    protected _resolution: Resolution | undefined;
    protected _resource: Resource | undefined;
    protected _search: Search | undefined;
    protected _source: Source | undefined;
    protected _supplyChain: SupplyChain | undefined;
    protected _trade: Trade | undefined;
    protected _traversal: Traversal | undefined;

    constructor(protected readonly _options: SayariClient.Options) {
        this._oauthTokenProvider = new core.OAuthTokenProvider({
            clientId: this._options.clientId,
            clientSecret: this._options.clientSecret,
            authClient: new Auth({
                environment: this._options.environment,
            }),
        });
    }

    public get attributes(): Attributes {
        return (this._attributes ??= new Attributes({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get auth(): Auth {
        return (this._auth ??= new Auth({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get entity(): Entity {
        return (this._entity ??= new Entity({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get info(): Info {
        return (this._info ??= new Info({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get metadata(): Metadata {
        return (this._metadata ??= new Metadata({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get negativeNews(): NegativeNews {
        return (this._negativeNews ??= new NegativeNews({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get notifications(): Notifications {
        return (this._notifications ??= new Notifications({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get project(): Project {
        return (this._project ??= new Project({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get record(): Record_ {
        return (this._record ??= new Record_({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get resolution(): Resolution {
        return (this._resolution ??= new Resolution({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get resource(): Resource {
        return (this._resource ??= new Resource({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get search(): Search {
        return (this._search ??= new Search({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get source(): Source {
        return (this._source ??= new Source({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get supplyChain(): SupplyChain {
        return (this._supplyChain ??= new SupplyChain({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get trade(): Trade {
        return (this._trade ??= new Trade({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get traversal(): Traversal {
        return (this._traversal ??= new Traversal({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }
}
