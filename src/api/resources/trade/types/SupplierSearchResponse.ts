/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SayariAnalyticsApi from "../../../index";

/**
 * OK
 *
 * @example
 *     {
 *         offset: 0,
 *         limit: 1,
 *         size: {
 *             count: 5541,
 *             qualifier: SayariAnalyticsApi.CountQualifier.Eq
 *         },
 *         next: true,
 *         data: [{
 *                 id: "LvKN1AA74GQ289vydvYgtg",
 *                 label: "RedbusAvto OU",
 *                 degree: 2523,
 *                 entityUrl: "/v1/entity/LvKN1AA74GQ289vydvYgtg",
 *                 pep: false,
 *                 psaCount: 0,
 *                 sanctioned: false,
 *                 closed: false,
 *                 type: SayariAnalyticsApi.Entities.Company,
 *                 identifiers: [],
 *                 addresses: [],
 *                 countries: [],
 *                 relationshipCount: {
 *                     [SayariAnalyticsApi.Relationships.ShipperOf]: 2522,
 *                     [SayariAnalyticsApi.Relationships.ShipsTo]: 1
 *                 },
 *                 tradeCount: {
 *                     "sent": 20,
 *                     "received": 33308
 *                 },
 *                 sourceCount: {
 *                     "96c06a5a03b61b91324c7e05b3114fb6": {
 *                         count: 2522,
 *                         label: "Ukraine Imports & Exports (January 2023 - Present)"
 *                     }
 *                 },
 *                 risk: {},
 *                 userAttributeCount: {},
 *                 userRecordCount: 0,
 *                 userRelatedEntitiesCount: 0,
 *                 userRelationshipCount: {},
 *                 relatedEntitiesCount: 2523,
 *                 attributeCount: {
 *                     [SayariAnalyticsApi.Attributes.Name]: 1
 *                 },
 *                 metadata: {
 *                     latestShipmentDate: "2023-10-27",
 *                     shipments: 2522,
 *                     hsCodes: [{
 *                             key: "870323",
 *                             docCount: 1292,
 *                             value: "Vehicles; with only spark-ignition internal combustion reciprocating piston engine, cylinder capacity over 1500 but not over 3000cc",
 *                             valueSimple: "Cars & Passenger Vehicles"
 *                         }, {
 *                             key: "8703239013",
 *                             docCount: 1288,
 *                             value: "Vehicles; with only spark-ignition internal combustion reciprocating piston engine, cylinder capacity over 1500 but not over 3000cc",
 *                             valueSimple: "Cars & Passenger Vehicles"
 *                         }, {
 *                             key: "870332",
 *                             docCount: 509,
 *                             value: "Vehicles; with only compression-ignition internal combustion piston engine (diesel or semi-diesel), cylinder capacity over 1500 but not over 2500cc",
 *                             valueSimple: "Cars & Passenger Vehicles"
 *                         }, {
 *                             key: "8703329030",
 *                             docCount: 508,
 *                             value: "Vehicles; with only compression-ignition internal combustion piston engine (diesel or semi-diesel), cylinder capacity over 1500 but not over 2500cc",
 *                             valueSimple: "Cars & Passenger Vehicles"
 *                         }, {
 *                             key: "870322",
 *                             docCount: 472,
 *                             value: "Vehicles; with only spark-ignition internal combustion piston engine, cylinder capacity over 1000 but not over 1500cc",
 *                             valueSimple: "Cars & Passenger Vehicles"
 *                         }]
 *                 }
 *             }]
 *     }
 */
export interface SupplierSearchResponse extends SayariAnalyticsApi.PaginatedResponse {
    offset: number;
    next: boolean;
    data: SayariAnalyticsApi.SupplierOrBuyer[];
}
