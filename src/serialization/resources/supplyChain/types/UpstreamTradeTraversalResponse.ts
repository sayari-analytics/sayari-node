/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { TradeTraversalFilters } from "./TradeTraversalFilters";
import { TradeTraversalData } from "./TradeTraversalData";

export const UpstreamTradeTraversalResponse: core.serialization.ObjectSchema<
    serializers.UpstreamTradeTraversalResponse.Raw,
    Sayari.UpstreamTradeTraversalResponse
> = core.serialization.object({
    status: core.serialization.number().optional(),
    success: core.serialization.boolean().optional(),
    message: core.serialization.string().optional(),
    filters: TradeTraversalFilters,
    data: TradeTraversalData,
    exploredCount: core.serialization.property("explored_count", core.serialization.number()),
    partialResults: core.serialization.property("partial_results", core.serialization.boolean()),
});

export declare namespace UpstreamTradeTraversalResponse {
    export interface Raw {
        status?: number | null;
        success?: boolean | null;
        message?: string | null;
        filters: TradeTraversalFilters.Raw;
        data: TradeTraversalData.Raw;
        explored_count: number;
        partial_results: boolean;
    }
}
