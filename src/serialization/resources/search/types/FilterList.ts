/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const FilterList: core.serialization.ObjectSchema<serializers.FilterList.Raw, SayariAnalyticsApi.FilterList> =
    core.serialization.object({
        source: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).SourceId))
            .optional(),
        country: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).Country))
            .optional(),
        state: core.serialization.list(core.serialization.string()).optional(),
        city: core.serialization.list(core.serialization.string()).optional(),
        entityType: core.serialization.property(
            "entity_type",
            core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).Entities)).optional()
        ),
        bounds: core.serialization.list(core.serialization.string()).optional(),
        risk: core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).Tag)).optional(),
    });

export declare namespace FilterList {
    interface Raw {
        source?: serializers.SourceId.Raw[] | null;
        country?: serializers.Country.Raw[] | null;
        state?: string[] | null;
        city?: string[] | null;
        entity_type?: serializers.Entities.Raw[] | null;
        bounds?: string[] | null;
        risk?: serializers.Tag.Raw[] | null;
    }
}
