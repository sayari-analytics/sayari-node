/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { SourceId } from "./SourceId";
import { Country } from "../../generatedTypes/types/Country";
import { Entities } from "../../generatedTypes/types/Entities";
import { Risk } from "../../generatedTypes/types/Risk";
import { RiskCategory } from "../../generatedTypes/types/RiskCategory";

export const FilterList: core.serialization.ObjectSchema<serializers.FilterList.Raw, Sayari.FilterList> =
    core.serialization.object({
        source: core.serialization.list(SourceId).optional(),
        sourceCountry: core.serialization.property("source_country", core.serialization.list(Country).optional()),
        country: core.serialization.list(Country).optional(),
        state: core.serialization.list(core.serialization.string()).optional(),
        city: core.serialization.list(core.serialization.string()).optional(),
        entityType: core.serialization.property("entity_type", core.serialization.list(Entities).optional()),
        bounds: core.serialization.list(core.serialization.string()).optional(),
        risk: core.serialization.list(Risk).optional(),
        riskCategory: core.serialization.property("risk_category", core.serialization.list(RiskCategory).optional()),
    });

export declare namespace FilterList {
    export interface Raw {
        source?: SourceId.Raw[] | null;
        source_country?: Country.Raw[] | null;
        country?: Country.Raw[] | null;
        state?: string[] | null;
        city?: string[] | null;
        entity_type?: Entities.Raw[] | null;
        bounds?: string[] | null;
        risk?: Risk.Raw[] | null;
        risk_category?: RiskCategory.Raw[] | null;
    }
}
