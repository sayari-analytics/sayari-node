/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const AttributeDetails: core.serialization.ObjectSchema<
    serializers.AttributeDetails.Raw,
    SayariAnalyticsApi.AttributeDetails
> = core.serialization.object({
    additionalInformation: core.serialization.property(
        "additional_information",
        core.serialization.lazyObject(async () => (await import("../../..")).AdditionalInformationInfo).optional()
    ),
    address: core.serialization.lazyObject(async () => (await import("../../..")).AddressInfo).optional(),
    businessPurpose: core.serialization.property(
        "business_purpose",
        core.serialization.lazyObject(async () => (await import("../../..")).BusinessPurposeInfo).optional()
    ),
    companyType: core.serialization.property(
        "company_type",
        core.serialization.lazyObject(async () => (await import("../../..")).CompanyTypeInfo).optional()
    ),
    contact: core.serialization.lazyObject(async () => (await import("../../..")).ContactInfo).optional(),
    country: core.serialization.lazyObject(async () => (await import("../../..")).CountryInfo).optional(),
    dateOfBirth: core.serialization.property(
        "date_of_birth",
        core.serialization.lazyObject(async () => (await import("../../..")).DateOfBirthInfo).optional()
    ),
    finances: core.serialization.lazyObject(async () => (await import("../../..")).FinancesInfo).optional(),
    financials: core.serialization.lazyObject(async () => (await import("../../..")).FinancialsInfo).optional(),
    gender: core.serialization.lazyObject(async () => (await import("../../..")).GenderInfo).optional(),
    generic: core.serialization.lazyObject(async () => (await import("../../..")).GenericInfo).optional(),
    identifier: core.serialization.lazyObject(async () => (await import("../../..")).IdentifierInfo).optional(),
    measurement: core.serialization.lazyObject(async () => (await import("../../..")).MeasurementInfo).optional(),
    monetaryValue: core.serialization.property(
        "monetary_value",
        core.serialization.lazyObject(async () => (await import("../../..")).MonetaryValueInfo).optional()
    ),
    name: core.serialization.lazyObject(async () => (await import("../../..")).NameInfo).optional(),
    personStatus: core.serialization.property(
        "person_status",
        core.serialization.lazyObject(async () => (await import("../../..")).PersonStatusInfo).optional()
    ),
    position: core.serialization.lazyObject(async () => (await import("../../..")).PositionInfo).optional(),
    riskIntelligence: core.serialization.property(
        "risk_intelligence",
        core.serialization.lazyObject(async () => (await import("../../..")).RiskIntelligenceInfo).optional()
    ),
    shares: core.serialization.lazyObject(async () => (await import("../../..")).SharesInfo).optional(),
    status: core.serialization.lazyObject(async () => (await import("../../..")).StatusInfo).optional(),
    translatedName: core.serialization.property(
        "translated_name",
        core.serialization.lazyObject(async () => (await import("../../..")).TranslatedNameInfo).optional()
    ),
    weakIdentifier: core.serialization.property(
        "weak_identifier",
        core.serialization.lazyObject(async () => (await import("../../..")).WeakIdentifierInfo).optional()
    ),
});

export declare namespace AttributeDetails {
    interface Raw {
        additional_information?: serializers.AdditionalInformationInfo.Raw | null;
        address?: serializers.AddressInfo.Raw | null;
        business_purpose?: serializers.BusinessPurposeInfo.Raw | null;
        company_type?: serializers.CompanyTypeInfo.Raw | null;
        contact?: serializers.ContactInfo.Raw | null;
        country?: serializers.CountryInfo.Raw | null;
        date_of_birth?: serializers.DateOfBirthInfo.Raw | null;
        finances?: serializers.FinancesInfo.Raw | null;
        financials?: serializers.FinancialsInfo.Raw | null;
        gender?: serializers.GenderInfo.Raw | null;
        generic?: serializers.GenericInfo.Raw | null;
        identifier?: serializers.IdentifierInfo.Raw | null;
        measurement?: serializers.MeasurementInfo.Raw | null;
        monetary_value?: serializers.MonetaryValueInfo.Raw | null;
        name?: serializers.NameInfo.Raw | null;
        person_status?: serializers.PersonStatusInfo.Raw | null;
        position?: serializers.PositionInfo.Raw | null;
        risk_intelligence?: serializers.RiskIntelligenceInfo.Raw | null;
        shares?: serializers.SharesInfo.Raw | null;
        status?: serializers.StatusInfo.Raw | null;
        translated_name?: serializers.TranslatedNameInfo.Raw | null;
        weak_identifier?: serializers.WeakIdentifierInfo.Raw | null;
    }
}
