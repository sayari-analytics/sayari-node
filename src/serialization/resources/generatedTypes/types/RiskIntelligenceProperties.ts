/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { Tag } from "./Tag";

export const RiskIntelligenceProperties: core.serialization.ObjectSchema<
    serializers.RiskIntelligenceProperties.Raw,
    Sayari.RiskIntelligenceProperties
> = core.serialization.object({
    authority: core.serialization.string().optional(),
    date: core.serialization.string().optional(),
    extra: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    fromDate: core.serialization.property("from_date", core.serialization.string().optional()),
    list: core.serialization.string().optional(),
    program: core.serialization.string().optional(),
    reason: core.serialization.string().optional(),
    score: core.serialization.number().optional(),
    toDate: core.serialization.property("to_date", core.serialization.string().optional()),
    type: Tag,
});

export declare namespace RiskIntelligenceProperties {
    export interface Raw {
        authority?: string | null;
        date?: string | null;
        extra?: Record<string, unknown> | null;
        from_date?: string | null;
        list?: string | null;
        program?: string | null;
        reason?: string | null;
        score?: number | null;
        to_date?: string | null;
        type: Tag.Raw;
    }
}
