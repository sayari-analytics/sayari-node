/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const AuthResponse: core.serialization.ObjectSchema<
    serializers.AuthResponse.Raw,
    SayariAnalyticsApi.AuthResponse
> = core.serialization.object({
    accessToken: core.serialization.property(
        "access_token",
        core.serialization.lazy(async () => (await import("../../..")).AccessToken)
    ),
    expiresIn: core.serialization.property(
        "expires_in",
        core.serialization.lazy(async () => (await import("../../..")).ExpiresIn)
    ),
    tokenType: core.serialization.property(
        "token_type",
        core.serialization.lazy(async () => (await import("../../..")).TokenType)
    ),
});

export declare namespace AuthResponse {
    interface Raw {
        access_token: serializers.AccessToken.Raw;
        expires_in: serializers.ExpiresIn.Raw;
        token_type: serializers.TokenType.Raw;
    }
}
