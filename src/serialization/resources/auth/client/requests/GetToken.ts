/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as SayariAnalyticsApi from "../../../../../api";
import * as core from "../../../../../core";

export const GetToken: core.serialization.Schema<serializers.GetToken.Raw, SayariAnalyticsApi.GetToken> =
    core.serialization.object({
        clientId: core.serialization.property(
            "client_id",
            core.serialization.lazy(async () => (await import("../../../..")).ClientId)
        ),
        clientSecret: core.serialization.property(
            "client_secret",
            core.serialization.lazy(async () => (await import("../../../..")).ClientSecret)
        ),
        audience: core.serialization.lazy(async () => (await import("../../../..")).Audience),
        grantType: core.serialization.property(
            "grant_type",
            core.serialization.lazy(async () => (await import("../../../..")).GrantType)
        ),
    });

export declare namespace GetToken {
    interface Raw {
        client_id: serializers.ClientId.Raw;
        client_secret: serializers.ClientSecret.Raw;
        audience: serializers.Audience.Raw;
        grant_type: serializers.GrantType.Raw;
    }
}
