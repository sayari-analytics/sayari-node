/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const ShipmentMetadata: core.serialization.ObjectSchema<
    serializers.ShipmentMetadata.Raw,
    SayariAnalyticsApi.ShipmentMetadata
> = core.serialization.object({
    arrivalCountry: core.serialization.property(
        "arrival_country",
        core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).Country))
    ),
    jurisdiction: core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).Country)),
    referenceId: core.serialization.property("reference_id", core.serialization.string()),
    entityId: core.serialization.property(
        "entity_id",
        core.serialization.lazy(async () => (await import("../../..")).EntityId)
    ),
    departureAddress: core.serialization.property(
        "departure_address",
        core.serialization.lazyObject(async () => (await import("../../..")).AddressProperties).optional()
    ),
    type: core.serialization.string(),
    sources: core.serialization.list(core.serialization.string()),
    departureCountry: core.serialization.property(
        "departure_country",
        core.serialization.list(core.serialization.lazy(async () => (await import("../../..")).Country))
    ),
});

export declare namespace ShipmentMetadata {
    interface Raw {
        arrival_country: serializers.Country.Raw[];
        jurisdiction: serializers.Country.Raw[];
        reference_id: string;
        entity_id: serializers.EntityId.Raw;
        departure_address?: serializers.AddressProperties.Raw | null;
        type: string;
        sources: string[];
        departure_country: serializers.Country.Raw[];
    }
}
