/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const Shipment: core.serialization.ObjectSchema<serializers.Shipment.Raw, SayariAnalyticsApi.Shipment> =
    core.serialization.object({
        id: core.serialization.string(),
        type: core.serialization.string(),
        buyer: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).SourceOrDestinationEntity)
        ),
        supplier: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).SourceOrDestinationEntity)
        ),
        arrivalDate: core.serialization.property("arrival_date", core.serialization.string().optional()),
        departureDate: core.serialization.property("departure_date", core.serialization.string().optional()),
        departureAddress: core.serialization.property(
            "departure_address",
            core.serialization.lazyObject(async () => (await import("../../..")).ShipmentAddress).optional()
        ),
        arrivalAddress: core.serialization.property(
            "arrival_address",
            core.serialization.lazyObject(async () => (await import("../../..")).ShipmentAddress).optional()
        ),
        monetaryValue: core.serialization.property(
            "monetary_value",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).MonetaryValue))
        ),
        weight: core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).Weight)),
        identifier: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).ShipmentIdentifier)
        ),
        sources: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).DataSource)
        ),
        hsCodes: core.serialization.property(
            "hs_codes",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("../../..")).HsCodeInfo))
        ),
        productDescriptions: core.serialization.property(
            "product_descriptions",
            core.serialization.list(core.serialization.string())
        ),
        record: core.serialization.lazy(async () => (await import("../../..")).RecordId),
    });

export declare namespace Shipment {
    interface Raw {
        id: string;
        type: string;
        buyer: serializers.SourceOrDestinationEntity.Raw[];
        supplier: serializers.SourceOrDestinationEntity.Raw[];
        arrival_date?: string | null;
        departure_date?: string | null;
        departure_address?: serializers.ShipmentAddress.Raw | null;
        arrival_address?: serializers.ShipmentAddress.Raw | null;
        monetary_value: serializers.MonetaryValue.Raw[];
        weight: serializers.Weight.Raw[];
        identifier: serializers.ShipmentIdentifier.Raw[];
        sources: serializers.DataSource.Raw[];
        hs_codes: serializers.HsCodeInfo.Raw[];
        product_descriptions: string[];
        record: serializers.RecordId.Raw;
    }
}
