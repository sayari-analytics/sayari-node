/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { ResourceType } from "./ResourceType";

export const EntityResponseData: core.serialization.ObjectSchema<
    serializers.EntityResponseData.Raw,
    Sayari.EntityResponseData
> = core.serialization.object({
    type: ResourceType,
    id: core.serialization.string(),
    project: core.serialization.string(),
    label: core.serialization.string(),
    created: core.serialization.string(),
    updated: core.serialization.string(),
    updatedBy: core.serialization.property("updated_by", core.serialization.string()),
    version: core.serialization.number(),
    entityId: core.serialization.property("entity_id", core.serialization.string()),
    tagIds: core.serialization.property("tag_ids", core.serialization.list(core.serialization.string())),
    caseStatus: core.serialization.property("case_status", core.serialization.string()),
});

export declare namespace EntityResponseData {
    export interface Raw {
        type: ResourceType.Raw;
        id: string;
        project: string;
        label: string;
        created: string;
        updated: string;
        updated_by: string;
        version: number;
        entity_id: string;
        tag_ids: string[];
        case_status: string;
    }
}
