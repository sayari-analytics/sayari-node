/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { EntityRegistrationDate } from "./EntityRegistrationDate";
import { EntityTranslatedLabel } from "./EntityTranslatedLabel";
import { EntityHsCode } from "./EntityHsCode";
import { ShipmentArrival } from "./ShipmentArrival";
import { ShipmentDeparture } from "./ShipmentDeparture";
import { CompanyType } from "./CompanyType";
import { Status } from "./Status";
import { EntityRisk } from "./EntityRisk";
import { AttributeDetails } from "../../generatedTypes/types/AttributeDetails";
import { PossiblySameAs } from "./PossiblySameAs";
import { ReferencedBy } from "./ReferencedBy";
import { EmbeddedEntity } from "./EmbeddedEntity";
import { RiskData } from "./RiskData";
import { Risk } from "../../generatedTypes/types/Risk";

export const EntityDetails: core.serialization.ObjectSchema<serializers.EntityDetails.Raw, Sayari.EntityDetails> =
    core.serialization
        .object({
            registrationDate: core.serialization.property("registration_date", EntityRegistrationDate.optional()),
            translatedLabel: core.serialization.property("translated_label", EntityTranslatedLabel.optional()),
            hsCode: core.serialization.property("hs_code", EntityHsCode.optional()),
            shipmentArrival: core.serialization.property("shipment_arrival", ShipmentArrival.optional()),
            shipmentDeparture: core.serialization.property("shipment_departure", ShipmentDeparture.optional()),
            companyType: core.serialization.property("company_type", CompanyType.optional()),
            latestStatus: core.serialization.property("latest_status", Status.optional()),
            risk: EntityRisk,
            attributes: AttributeDetails.optional(),
            relationships: core.serialization.lazyObject(() => serializers.EntityRelationships).optional(),
            possiblySameAs: core.serialization.property("possibly_same_as", PossiblySameAs.optional()),
            referencedBy: core.serialization.property("referenced_by", ReferencedBy.optional()),
        })
        .extend(EmbeddedEntity);

export declare namespace EntityDetails {
    interface Raw extends EmbeddedEntity.Raw {
        registration_date?: EntityRegistrationDate.Raw | null;
        translated_label?: EntityTranslatedLabel.Raw | null;
        hs_code?: EntityHsCode.Raw | null;
        shipment_arrival?: ShipmentArrival.Raw | null;
        shipment_departure?: ShipmentDeparture.Raw | null;
        company_type?: CompanyType.Raw | null;
        latest_status?: Status.Raw | null;
        risk: EntityRisk.Raw;
        attributes?: AttributeDetails.Raw | null;
        relationships?: serializers.EntityRelationships.Raw | null;
        possibly_same_as?: PossiblySameAs.Raw | null;
        referenced_by?: ReferencedBy.Raw | null;
    }
}
