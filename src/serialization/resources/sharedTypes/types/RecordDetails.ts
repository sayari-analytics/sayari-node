/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const RecordDetails: core.serialization.ObjectSchema<
    serializers.RecordDetails.Raw,
    SayariAnalyticsApi.RecordDetails
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).RecordId),
    label: core.serialization.string(),
    source: core.serialization.lazy(async () => (await import("../../..")).SourceId),
    publicationDate: core.serialization.property("publication_date", core.serialization.string().optional()),
    acquisitionDate: core.serialization.property("acquisition_date", core.serialization.string()),
    referencesCount: core.serialization.property("references_count", core.serialization.number()),
    recordUrl: core.serialization.property("record_url", core.serialization.string()),
    sourceUrl: core.serialization.property("source_url", core.serialization.string().optional()),
    documentUrls: core.serialization.property(
        "document_urls",
        core.serialization.list(core.serialization.string()).optional()
    ),
    matches: core.serialization
        .record(core.serialization.string(), core.serialization.list(core.serialization.string()))
        .optional(),
});

export declare namespace RecordDetails {
    interface Raw {
        id: serializers.RecordId.Raw;
        label: string;
        source: serializers.SourceId.Raw;
        publication_date?: string | null;
        acquisition_date: string;
        references_count: number;
        record_url: string;
        source_url?: string | null;
        document_urls?: string[] | null;
        matches?: Record<string, string[]> | null;
    }
}
