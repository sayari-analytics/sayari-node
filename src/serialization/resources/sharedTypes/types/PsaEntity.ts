/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { EntityRisk } from "./EntityRisk";
import { EntityRegistrationDate } from "./EntityRegistrationDate";
import { CompanyType } from "./CompanyType";
import { Status } from "./Status";
import { EmbeddedEntity } from "./EmbeddedEntity";
import { RiskData } from "./RiskData";
import { Risk } from "../../generatedTypes/types/Risk";

export const PsaEntity: core.serialization.ObjectSchema<serializers.PsaEntity.Raw, Sayari.PsaEntity> =
    core.serialization
        .object({
            risk: EntityRisk,
            registrationDate: core.serialization.property("registration_date", EntityRegistrationDate.optional()),
            companyType: core.serialization.property("company_type", CompanyType.optional()),
            latestStatus: core.serialization.property("latest_status", Status.optional()),
        })
        .extend(EmbeddedEntity);

export declare namespace PsaEntity {
    export interface Raw extends EmbeddedEntity.Raw {
        risk: EntityRisk.Raw;
        registration_date?: EntityRegistrationDate.Raw | null;
        company_type?: CompanyType.Raw | null;
        latest_status?: Status.Raw | null;
    }
}
