/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";

export const PsaEntity: core.serialization.ObjectSchema<serializers.PsaEntity.Raw, SayariAnalyticsApi.PsaEntity> =
    core.serialization
        .object({
            risk: core.serialization.lazy(async () => (await import("../../..")).EntityRisk),
            registrationDate: core.serialization.property(
                "registration_date",
                core.serialization.lazy(async () => (await import("../../..")).EntityRegistrationDate).optional()
            ),
            companyType: core.serialization.property(
                "company_type",
                core.serialization.lazy(async () => (await import("../../..")).CompanyType).optional()
            ),
            latestStatus: core.serialization.property(
                "latest_status",
                core.serialization.lazyObject(async () => (await import("../../..")).Status).optional()
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).EmbeddedEntity));

export declare namespace PsaEntity {
    interface Raw extends serializers.EmbeddedEntity.Raw {
        risk: serializers.EntityRisk.Raw;
        registration_date?: serializers.EntityRegistrationDate.Raw | null;
        company_type?: serializers.CompanyType.Raw | null;
        latest_status?: serializers.Status.Raw | null;
    }
}
