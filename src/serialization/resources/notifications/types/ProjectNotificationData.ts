/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { Notification } from "./Notification";
import { ProjectNotificationRiskData } from "./ProjectNotificationRiskData";

export const ProjectNotificationData: core.serialization.ObjectSchema<
    serializers.ProjectNotificationData.Raw,
    Sayari.ProjectNotificationData
> = core.serialization.object({
    resourceId: core.serialization.property("resource_id", core.serialization.string()),
    entityId: core.serialization.property("entity_id", core.serialization.string()),
    notifications: core.serialization.list(Notification),
    customFields: core.serialization.property(
        "custom_fields",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
    riskNotifications: core.serialization.property("risk_notifications", ProjectNotificationRiskData),
});

export declare namespace ProjectNotificationData {
    export interface Raw {
        resource_id: string;
        entity_id: string;
        notifications: Notification.Raw[];
        custom_fields?: Record<string, unknown> | null;
        risk_notifications: ProjectNotificationRiskData.Raw;
    }
}
