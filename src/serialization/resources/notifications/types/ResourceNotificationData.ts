/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { NotificationType } from "./NotificationType";
import { Risk } from "../../generatedTypes/types/Risk";
import { RiskValue } from "../../sharedTypes/types/RiskValue";

export const ResourceNotificationData: core.serialization.ObjectSchema<
    serializers.ResourceNotificationData.Raw,
    Sayari.ResourceNotificationData
> = core.serialization.object({
    savedResourceId: core.serialization.property("saved_resource_id", core.serialization.string()),
    projectId: core.serialization.property("project_id", core.serialization.string()),
    entityId: core.serialization.property("entity_id", core.serialization.string()),
    type: NotificationType,
    field: Risk,
    value: RiskValue,
    date: core.serialization.string(),
});

export declare namespace ResourceNotificationData {
    export interface Raw {
        saved_resource_id: string;
        project_id: string;
        entity_id: string;
        type: NotificationType.Raw;
        field: Risk.Raw;
        value: RiskValue.Raw;
        date: string;
    }
}
