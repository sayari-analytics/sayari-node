/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";

export const OntologyRiskFactor: core.serialization.ObjectSchema<
    serializers.OntologyRiskFactor.Raw,
    Sayari.OntologyRiskFactor
> = core.serialization.object({
    id: core.serialization.string(),
    categories: core.serialization.list(core.serialization.string()),
    label: core.serialization.string(),
    description: core.serialization.string(),
    doc: core.serialization.string(),
    code: core.serialization.number(),
    level: core.serialization.string(),
    riskType: core.serialization.property("risk_type", core.serialization.string()),
    riskViz: core.serialization.property("risk_viz", core.serialization.string()),
    visible: core.serialization.boolean(),
    enabled: core.serialization.boolean(),
    type: core.serialization.string(),
    tg: core.serialization.boolean(),
    doNotRenderMetadata: core.serialization.property(
        "do_not_render_metadata",
        core.serialization.list(core.serialization.string()),
    ),
});

export declare namespace OntologyRiskFactor {
    export interface Raw {
        id: string;
        categories: string[];
        label: string;
        description: string;
        doc: string;
        code: number;
        level: string;
        risk_type: string;
        risk_viz: string;
        visible: boolean;
        enabled: boolean;
        type: string;
        tg: boolean;
        do_not_render_metadata: string[];
    }
}
