/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { Risk } from "../../generatedTypes/types/Risk";
import { RiskCategory } from "../../generatedTypes/types/RiskCategory";
import { RiskLevel } from "../../sharedTypes/types/RiskLevel";

export const OntologyRiskFactorsFilters: core.serialization.ObjectSchema<
    serializers.OntologyRiskFactorsFilters.Raw,
    Sayari.OntologyRiskFactorsFilters
> = core.serialization.object({
    id: core.serialization.list(Risk).optional(),
    riskCategory: core.serialization.property("risk_category", core.serialization.list(RiskCategory).optional()),
    level: core.serialization.list(RiskLevel).optional(),
    riskType: core.serialization.property("risk_type", core.serialization.list(core.serialization.string()).optional()),
    enabled: core.serialization.boolean().optional(),
    visible: core.serialization.boolean().optional(),
});

export declare namespace OntologyRiskFactorsFilters {
    export interface Raw {
        id?: Risk.Raw[] | null;
        risk_category?: RiskCategory.Raw[] | null;
        level?: RiskLevel.Raw[] | null;
        risk_type?: string[] | null;
        enabled?: boolean | null;
        visible?: boolean | null;
    }
}
