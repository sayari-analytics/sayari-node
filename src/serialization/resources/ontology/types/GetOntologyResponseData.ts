/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { OntologyAttribute } from "./OntologyAttribute";
import { OntologyCountry } from "./OntologyCountry";
import { OntologyCurrency } from "./OntologyCurrency";
import { OntologyEntityType } from "./OntologyEntityType";
import { OntologyEnum } from "./OntologyEnum";
import { OntologyIdentifier } from "./OntologyIdentifier";
import { OntologyLanguage } from "./OntologyLanguage";
import { OntologyRegion } from "./OntologyRegion";
import { OntologyRelationship } from "./OntologyRelationship";
import { OntologyRiskFactor } from "./OntologyRiskFactor";
import { OntologySource } from "./OntologySource";
import { OntologySourceType } from "./OntologySourceType";

export const GetOntologyResponseData: core.serialization.ObjectSchema<
    serializers.GetOntologyResponseData.Raw,
    Sayari.GetOntologyResponseData
> = core.serialization.object({
    attributes: core.serialization.list(OntologyAttribute),
    countries: core.serialization.list(OntologyCountry),
    currencies: core.serialization.list(OntologyCurrency),
    entityTypes: core.serialization.property("entity_types", core.serialization.list(OntologyEntityType)),
    enums: core.serialization.list(OntologyEnum),
    identifiers: core.serialization.list(OntologyIdentifier),
    languages: core.serialization.list(OntologyLanguage),
    regions: core.serialization.list(OntologyRegion),
    relationships: core.serialization.list(OntologyRelationship),
    riskFactors: core.serialization.property("risk_factors", core.serialization.list(OntologyRiskFactor)),
    sources: core.serialization.list(OntologySource),
    sourceTypes: core.serialization.property("source_types", core.serialization.list(OntologySourceType)),
});

export declare namespace GetOntologyResponseData {
    export interface Raw {
        attributes: OntologyAttribute.Raw[];
        countries: OntologyCountry.Raw[];
        currencies: OntologyCurrency.Raw[];
        entity_types: OntologyEntityType.Raw[];
        enums: OntologyEnum.Raw[];
        identifiers: OntologyIdentifier.Raw[];
        languages: OntologyLanguage.Raw[];
        regions: OntologyRegion.Raw[];
        relationships: OntologyRelationship.Raw[];
        risk_factors: OntologyRiskFactor.Raw[];
        sources: OntologySource.Raw[];
        source_types: OntologySourceType.Raw[];
    }
}
