/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { RelationshipInfo } from "../../sharedTypes/types/RelationshipInfo";

export const TraversalRelationshipData: core.serialization.ObjectSchema<
    serializers.TraversalRelationshipData.Raw,
    Sayari.TraversalRelationshipData
> = core.serialization.object({
    values: core.serialization.list(RelationshipInfo),
    former: core.serialization.boolean().optional(),
    startDate: core.serialization.property("start_date", core.serialization.string().optional()),
    lastObserved: core.serialization.property("last_observed", core.serialization.string().optional()),
    endDate: core.serialization.property("end_date", core.serialization.string().optional()),
});

export declare namespace TraversalRelationshipData {
    export interface Raw {
        values: RelationshipInfo.Raw[];
        former?: boolean | null;
        start_date?: string | null;
        last_observed?: string | null;
        end_date?: string | null;
    }
}
