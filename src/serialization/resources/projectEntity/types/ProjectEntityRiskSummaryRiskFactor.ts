/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { StringOrNumber } from "./StringOrNumber";
import { RiskLevel } from "../../sharedTypes/types/RiskLevel";
import { ProjectRiskCategory } from "./ProjectRiskCategory";
import { ProjectEntityRiskSummaryNetworkPath } from "./ProjectEntityRiskSummaryNetworkPath";

export const ProjectEntityRiskSummaryRiskFactor: core.serialization.ObjectSchema<
    serializers.ProjectEntityRiskSummaryRiskFactor.Raw,
    Sayari.ProjectEntityRiskSummaryRiskFactor
> = core.serialization.object({
    id: core.serialization.string(),
    label: core.serialization.string(),
    value: StringOrNumber,
    level: RiskLevel,
    riskCategories: core.serialization.property("risk_categories", core.serialization.list(ProjectRiskCategory)),
    sourceEntityIds: core.serialization.property(
        "source_entity_ids",
        core.serialization.list(core.serialization.string()),
    ),
    networkPaths: core.serialization.property(
        "network_paths",
        core.serialization.list(core.serialization.list(ProjectEntityRiskSummaryNetworkPath)),
    ),
    metadata: core.serialization.list(
        core.serialization.record(core.serialization.string(), core.serialization.list(StringOrNumber)),
    ),
    riskIntelligence: core.serialization.property(
        "risk_intelligence",
        core.serialization.list(core.serialization.record(core.serialization.string(), StringOrNumber)),
    ),
});

export declare namespace ProjectEntityRiskSummaryRiskFactor {
    export interface Raw {
        id: string;
        label: string;
        value: StringOrNumber.Raw;
        level: RiskLevel.Raw;
        risk_categories: ProjectRiskCategory.Raw[];
        source_entity_ids: string[];
        network_paths: ProjectEntityRiskSummaryNetworkPath.Raw[][];
        metadata: Record<string, StringOrNumber.Raw[]>[];
        risk_intelligence: Record<string, StringOrNumber.Raw>[];
    }
}
