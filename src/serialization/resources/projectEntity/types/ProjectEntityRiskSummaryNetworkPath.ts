/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Sayari from "../../../../api/index";
import * as core from "../../../../core";
import { ShareInformation } from "./ShareInformation";

export const ProjectEntityRiskSummaryNetworkPath: core.serialization.ObjectSchema<
    serializers.ProjectEntityRiskSummaryNetworkPath.Raw,
    Sayari.ProjectEntityRiskSummaryNetworkPath
> = core.serialization.object({
    sayariEntityId: core.serialization.property("sayari_entity_id", core.serialization.string()),
    sayariEntityLabel: core.serialization.property("sayari_entity_label", core.serialization.string()),
    relationshipType: core.serialization.property("relationship_type", core.serialization.string()),
    relationshipStatus: core.serialization.property("relationship_status", core.serialization.string()),
    former: core.serialization.boolean(),
    firstObserved: core.serialization.property("first_observed", core.serialization.string()),
    lastObserved: core.serialization.property("last_observed", core.serialization.string()),
    startDate: core.serialization.property("start_date", core.serialization.string().optional()),
    shares: ShareInformation.optional(),
});

export declare namespace ProjectEntityRiskSummaryNetworkPath {
    export interface Raw {
        sayari_entity_id: string;
        sayari_entity_label: string;
        relationship_type: string;
        relationship_status: string;
        former: boolean;
        first_observed: string;
        last_observed: string;
        start_date?: string | null;
        shares?: ShareInformation.Raw | null;
    }
}
