/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";
export declare const EmbeddedEntity: core.serialization.ObjectSchema<serializers.EmbeddedEntity.Raw, SayariAnalyticsApi.EmbeddedEntity>;
export declare namespace EmbeddedEntity {
    interface Raw {
        id: serializers.EntityId.Raw;
        label: serializers.EntityLabel.Raw;
        degree: serializers.EntityDegree.Raw;
        closed: serializers.EntityClosed.Raw;
        entity_url: serializers.EntityUrl.Raw;
        pep: serializers.EntityPep.Raw;
        psa_count: serializers.EntityPsaCount.Raw;
        sanctioned: serializers.EntitySanctioned.Raw;
        type: serializers.Entities.Raw;
        identifiers: serializers.Identifier.Raw[];
        countries: serializers.Country.Raw[];
        source_count: serializers.SourceCount.Raw;
        addresses: serializers.EntityAddresses.Raw[];
        date_of_birth?: serializers.EntityDob.Raw | null;
        relationship_count: serializers.EntityRelationshipCount.Raw;
    }
}
