/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as SayariAnalyticsApi from "../../../../api";
import * as core from "../../../../core";
export declare const Relationships: core.serialization.Schema<serializers.Relationships.Raw, SayariAnalyticsApi.Relationships>;
export declare namespace Relationships {
    type Raw = "sole_proprietor_of" | "has_sole_proprietor" | "lawyer_of" | "has_lawyer" | "generic" | "secretary_of" | "has_secretary" | "receiver_of" | "received_by" | "legal_representative_of" | "has_legal_representative" | "liquidator_of" | "has_liquidator" | "legal_successor_of" | "has_legal_successor" | "partner_of" | "has_partner" | "associate_of" | "has_associate" | "ships_to" | "receives_from" | "linked_to" | "shareholder_of" | "has_shareholder" | "director_of" | "has_director" | "owner_of" | "has_owner" | "issuer_of" | "has_issuer" | "shipper_of" | "shipped_by" | "beneficial_owner_of" | "has_beneficial_owner" | "supervisor_of" | "has_supervisor" | "client_of" | "has_client" | "officer_of" | "has_officer" | "executive_of" | "has_executive" | "judicial_representative_of" | "has_judicial_representative" | "notify_party_of" | "has_notify_party" | "legal_predecessor_of" | "has_legal_predecessor" | "carrier_of" | "has_carrier" | "branch_of" | "has_branch" | "family_of" | "auditor_of" | "has_auditor" | "employee_of" | "has_employee" | "party_to" | "has_party" | "registered_agent_of" | "has_registered_agent" | "subsidiary_of" | "has_subsidiary" | "judidical_representative_of" | "manager_of" | "has_manager" | "member_of_the_board_of" | "has_member_of_the_board" | "lawyer_in" | "founder_of" | "has_founder";
}
