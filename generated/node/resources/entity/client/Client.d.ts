/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as SayariAnalyticsApi from "../../..";
export declare namespace Entity {
    interface Options {
        environment?: core.Supplier<environments.SayariAnalyticsApiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Entity {
    protected readonly _options: Entity.Options;
    constructor(_options: Entity.Options);
    /**
     * Retrieve an entity from the database based on the ID
     * @throws {@link SayariAnalyticsApi.NotFoundError}
     */
    getEntity(id: SayariAnalyticsApi.EntityId, request?: SayariAnalyticsApi.GetEntity, requestOptions?: Entity.RequestOptions): Promise<SayariAnalyticsApi.EntityDetails>;
    /**
     * The Entity Summary endpoint returns a smaller entity payload
     * @throws {@link SayariAnalyticsApi.NotFoundError}
     */
    entitySummary(id: SayariAnalyticsApi.EntityId, requestOptions?: Entity.RequestOptions): Promise<SayariAnalyticsApi.EntityDetails>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
