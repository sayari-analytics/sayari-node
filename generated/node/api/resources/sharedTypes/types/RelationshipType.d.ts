/**
 * This file was auto-generated by Fern from our API Definition.
 */
export declare type RelationshipType = "auditor_of" | "beneficial_owner_of" | "branch_of" | "director_of" | "employee_of" | "family_of" | "founder_of" | "issuer_of" | "lawyer_in" | "lawyer_of" | "legal_predecessor_of" | "legal_representative_of" | "legal_successor_of" | "linked_to" | "liquidator_of" | "manager_of" | "member_of_the_board_of" | "officer_of" | "owner_of" | "partner_of" | "party_to" | "receiver_of" | "registered_agent_of" | "shareholder_of" | "shipper_of" | "ships_to" | "subsidiary_of" | "supervisor_of" | "has_auditor" | "has_beneficial_owner" | "has_branch" | "has_director" | "has_employee" | "has_founder" | "has_issuer" | "has_lawyer" | "has_legal_predecessor" | "has_legal_representative" | "has_legal_successor" | "has_liquidator" | "has_manager" | "has_member_of_the_board" | "has_officer" | "has_owner" | "has_partner" | "has_party" | "received_by" | "has_registered_agent" | "has_shareholder" | "shipped_by" | "receives_from" | "has_subsidiary" | "has_supervisor";
export declare const RelationshipType: {
    readonly AuditorOf: "auditor_of";
    readonly BeneficialOwnerOf: "beneficial_owner_of";
    readonly BranchOf: "branch_of";
    readonly DirectorOf: "director_of";
    readonly EmployeeOf: "employee_of";
    readonly FamilyOf: "family_of";
    readonly FounderOf: "founder_of";
    readonly IssuerOf: "issuer_of";
    readonly LawyerIn: "lawyer_in";
    readonly LawyerOf: "lawyer_of";
    readonly LegalPredecessorOf: "legal_predecessor_of";
    readonly LegalRepresentativeOf: "legal_representative_of";
    readonly LegalSuccessorOf: "legal_successor_of";
    readonly LinkedTo: "linked_to";
    readonly LiquidatorOf: "liquidator_of";
    readonly ManagerOf: "manager_of";
    readonly MemberOfTheBoardOf: "member_of_the_board_of";
    readonly OfficerOf: "officer_of";
    readonly OwnerOf: "owner_of";
    readonly PartnerOf: "partner_of";
    readonly PartyTo: "party_to";
    readonly ReceiverOf: "receiver_of";
    readonly RegisteredAgentOf: "registered_agent_of";
    readonly ShareholderOf: "shareholder_of";
    readonly ShipperOf: "shipper_of";
    readonly ShipsTo: "ships_to";
    readonly SubsidiaryOf: "subsidiary_of";
    readonly SupervisorOf: "supervisor_of";
    readonly HasAuditor: "has_auditor";
    readonly HasBeneficialOwner: "has_beneficial_owner";
    readonly HasBranch: "has_branch";
    readonly HasDirector: "has_director";
    readonly HasEmployee: "has_employee";
    readonly HasFounder: "has_founder";
    readonly HasIssuer: "has_issuer";
    readonly HasLawyer: "has_lawyer";
    readonly HasLegalPredecessor: "has_legal_predecessor";
    readonly HasLegalRepresentative: "has_legal_representative";
    readonly HasLegalSuccessor: "has_legal_successor";
    readonly HasLiquidator: "has_liquidator";
    readonly HasManager: "has_manager";
    readonly HasMemberOfTheBoard: "has_member_of_the_board";
    readonly HasOfficer: "has_officer";
    readonly HasOwner: "has_owner";
    readonly HasPartner: "has_partner";
    readonly HasParty: "has_party";
    readonly ReceivedBy: "received_by";
    readonly HasRegisteredAgent: "has_registered_agent";
    readonly HasShareholder: "has_shareholder";
    readonly ShippedBy: "shipped_by";
    readonly ReceivesFrom: "receives_from";
    readonly HasSubsidiary: "has_subsidiary";
    readonly HasSupervisor: "has_supervisor";
};
